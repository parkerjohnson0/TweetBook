{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peppe\\\\Documents\\\\code-stuff\\\\TweetBook\\\\src\\\\components\\\\Post.js\",\n    _s = $RefreshSig$();\n\nimport ReplyButton from \"./ReplyButton\";\nimport CommentsButton from \"./CommentsButton\";\nimport PostDate from \"./PostDate\";\nimport Avatar from \"./Avatar\";\nimport ReplyBox from \"./ReplyBox\";\nimport ShowMoreButton from \"./ShowMoreButton\";\nimport ReturnButton from \"./ReturnButton\";\nimport React, { useState } from \"react\";\nimport config from \"../config\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post(props) {\n  _s();\n\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isReplying, setIsReplying] = useState(false);\n  const [isNewPostVisible, setIsNewPostVisible] = useState(true);\n  const [postReplyId, setPostReplyId] = useState(0);\n  const [deleteButtonVis, setDeleteButtonVis] = useState(false);\n  let post = props.post;\n  let width = 800 - props.offset;\n  let style = {\n    position: \"relative\",\n    left: props.offset,\n    top: props.top + \"px\",\n    width: width\n  };\n\n  const updateReplying = (value, key) => {\n    setIsReplying(value);\n    setPostReplyId(key);\n  };\n\n  let hasComments = post.comments && post.comments.length > 0;\n\n  const CommentsClicked = () => {\n    if (isExpanded || isReplying) {\n      setIsReplying(false);\n      props.updateReplying(false, post.postID);\n      props.setIsNewPostVisible(true);\n    }\n\n    setIsExpanded(!isExpanded);\n  };\n\n  function changeDeleteVis() {\n    if (post.userID === props.userLoggedIn.UserID) {\n      setDeleteButtonVis(!deleteButtonVis);\n    }\n  }\n\n  const autoExpand = () => {\n    if (isExpanded || isReplying) {\n      setIsReplying(false);\n      props.updateReplying(false, post.postID);\n      props.setIsNewPostVisible(true);\n    }\n\n    setIsExpanded(true);\n  };\n\n  const changeReplyState = () => {\n    props.updateReplying(!isReplying, post.postID);\n    props.setIsNewPostVisible(isReplying);\n    setIsReplying(!isReplying);\n  };\n\n  const latchReplyBox = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex content-center justify-center\",\n      style: {\n        position: \"relative\",\n        left: `${props.offset}px`,\n        width: `${width}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(ReplyBox, {\n        updateLoggedInUserAvatar: props.updateLoggedInUserAvatar,\n        setFileIsUploading: props.setFileIsUploading,\n        userID: props.userLoggedIn.UserID,\n        expandComments: autoExpand,\n        changeReplyState: changeReplyState,\n        getPosts: props.getPosts,\n        isGuest: props.loggedInUserIsGuest,\n        parentPostID: post.postID,\n        isLoggedIn: props.isLoggedIn,\n        userLoggedIn: props.userLoggedIn,\n        offset: props.offset,\n        isNewPostVisible: !isNewPostVisible,\n        isReplying: isReplying,\n        fixedBox: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n\n  const replyCheck = () => {\n    if (isReplying && props.replyingPost != post.postID) {\n      setIsReplying(!isReplying);\n    }\n\n    return isReplying && props.replyingPost == post.postID;\n  };\n\n  async function deletePost(postID) {\n    const response = await fetch(config.API() + `/tweetbookapi/Posts/${postID}`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n    }).then(data => {\n      if (data < 1) {\n        //dont think this should be possible but IDK\n        throw new Error(\"Post was selected for deletion but was not deleted for some reason\");\n      } else {\n        props.getPosts();\n      }\n    });\n  }\n\n  function commentsEval() {\n    if (props.nestLevel > 3 && hasComments) {\n      return /*#__PURE__*/_jsxDEV(ShowMoreButton, {\n        setPostsString: props.setPostsString,\n        postID: post.postID,\n        getPosts: props.getPosts,\n        children: \"lol\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 18\n      }, this);\n    } else if (hasComments) {\n      return /*#__PURE__*/_jsxDEV(CommentsButton, {\n        isCommentsExpanded: isExpanded,\n        commentsClicked: CommentsClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col content-center justify-center w-full  \",\n    style: {\n      position: props.position,\n      left: style.left,\n      width: style.width\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex content-center justify-center \" + (props.isChild ? \"border-l-2 border-slate-300\" : \"\"),\n      style: {\n        zIndex: props.z,\n        position: \"relative\",\n        width: style.width,\n        left: style.left\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex content-center text-gray-50 h-fit min-w-4 bg-slate-500 border-8\",\n        style: {\n          position: style.position,\n          top: style.top,\n          width: style.width\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          updateLoggedInUserAvatar: props.updateLoggedInUserAvatar,\n          setFileIsUploading: props.setFileIsUploading,\n          userID: props.userLoggedIn.UserID,\n          username: post.username,\n          fileName: post.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute h-8 w-8\",\n          onMouseEnter: () => changeDeleteVis(),\n          onMouseLeave: () => changeDeleteVis(),\n          children: deleteButtonVis && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deletePost(post.postID),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/res/delete_post.png\",\n              alt: \"delete post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-border pb-10 relative bg-slate-500 w-full\",\n          children: [props.returnButton.enabled && props.returnButton.currentID == post.postID && /*#__PURE__*/_jsxDEV(ReturnButton, {\n            returnButton: props.returnButton,\n            setPostsString: props.setPostsString\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pl-3 font-sans bg-zinc-700 w-full\",\n            children: /*#__PURE__*/_jsxDEV(PostDate, {\n              date: post.timePosted\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-5 break-all font-sans\",\n            children: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-4 absolute bottom-0 right-0\",\n            children: [/*#__PURE__*/_jsxDEV(ReplyButton, {\n              changeReplyState: changeReplyState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), commentsEval()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), replyCheck() && latchReplyBox(), isExpanded && props.post.comments.map((post, idx) => {\n      return (\n        /*#__PURE__*/\n        //             getPosts={getPosts} replyingPost={postReplyId} isLoggedIn={isLoggedIn} userLoggedIn={userLoggedIn} loggedInUserIsGuest={isGuest} setIsNewPostVisible={setIsNewPostVisible}\n        // updateReplying={updateReplying} z={100} top={0} key={post.postID} post={post} offset={0}\n        _jsxDEV(Post, {\n          returnButton: props.returnButton,\n          setPostsString: props.setPostsString,\n          nestLevel: props.nestLevel + 1,\n          isChild: true,\n          deletePost: props.deletePost,\n          updateLoggedInUserAvatar: props.updateLoggedInUserAvatar,\n          setFileIsUploading: props.setFileIsUploading,\n          userID: props.userLoggedIn.UserID,\n          expandComments: autoExpand,\n          getPosts: props.getPosts,\n          isLoggedIn: props.isLoggedIn,\n          userLoggedIn: props.userLoggedIn,\n          loggedInUserIsGuest: props.loggedInUserIsGuest,\n          replyingPost: props.replyingPost,\n          setIsNewPostVisible: props.setIsNewPostVisible,\n          updateReplying: props.updateReplying,\n          z: props.z + 1,\n          post: post,\n          offset: props.offset + 15\n        }, post.postID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)\n      );\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"aj3gZrTJ2dyperVTcb++vaP/spA=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/peppe/Documents/code-stuff/TweetBook/src/components/Post.js"],"names":["ReplyButton","CommentsButton","PostDate","Avatar","ReplyBox","ShowMoreButton","ReturnButton","React","useState","config","motion","AnimatePresence","Post","props","isExpanded","setIsExpanded","isReplying","setIsReplying","isNewPostVisible","setIsNewPostVisible","postReplyId","setPostReplyId","deleteButtonVis","setDeleteButtonVis","post","width","offset","style","position","left","top","updateReplying","value","key","hasComments","comments","length","CommentsClicked","postID","changeDeleteVis","userID","userLoggedIn","UserID","autoExpand","changeReplyState","latchReplyBox","updateLoggedInUserAvatar","setFileIsUploading","getPosts","loggedInUserIsGuest","isLoggedIn","replyCheck","replyingPost","deletePost","response","fetch","API","method","headers","then","ok","Error","status","data","commentsEval","nestLevel","setPostsString","isChild","zIndex","z","username","avatar","returnButton","enabled","currentID","timePosted","content","map","idx"],"mappings":"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","sourcesContent":["import ReplyButton from \"./ReplyButton\";\r\nimport CommentsButton from \"./CommentsButton\";\r\nimport PostDate from \"./PostDate\";\r\nimport Avatar from \"./Avatar\";\r\nimport ReplyBox from \"./ReplyBox\";\r\nimport ShowMoreButton from \"./ShowMoreButton\";\r\nimport ReturnButton from \"./ReturnButton\";\r\nimport React, { useState } from \"react\"\r\nimport config from \"../config\"\r\nimport {motion, AnimatePresence} from \"framer-motion\"\r\nfunction Post(props)\r\n{\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    const [isReplying, setIsReplying] = useState(false);\r\n    const [isNewPostVisible, setIsNewPostVisible] = useState(true);\r\n    const [postReplyId, setPostReplyId] = useState(0);\r\n    const [deleteButtonVis, setDeleteButtonVis] = useState(false);\r\n    let post = props.post;\r\n    let width = 800 - props.offset;\r\n    let style = {\r\n        position: \"relative\",\r\n        left: props.offset,\r\n        top: props.top + \"px\",\r\n        width: width\r\n    }\r\n    const updateReplying = (value, key) =>\r\n    {\r\n      setIsReplying(value)\r\n      setPostReplyId(key)\r\n    }\r\n    let hasComments = (post.comments && post.comments.length > 0);\r\n    const CommentsClicked = () =>\r\n    {\r\n        if (isExpanded || isReplying)\r\n        {\r\n            setIsReplying(false);\r\n            props.updateReplying(false, post.postID);\r\n            props.setIsNewPostVisible(true);\r\n\r\n        }\r\n        setIsExpanded(!isExpanded);\r\n\r\n    }\r\n    function changeDeleteVis(){\r\n        if (post.userID === props.userLoggedIn.UserID){\r\n            setDeleteButtonVis(!deleteButtonVis);\r\n        }\r\n    }\r\n    const autoExpand = () =>\r\n    {\r\n        if (isExpanded || isReplying)\r\n        {\r\n            setIsReplying(false);\r\n            props.updateReplying(false, post.postID);\r\n            props.setIsNewPostVisible(true);\r\n\r\n        }\r\n        setIsExpanded(true);\r\n\r\n    }\r\n    const changeReplyState = () =>\r\n    {\r\n        props.updateReplying(!isReplying, post.postID);\r\n        props.setIsNewPostVisible(isReplying);\r\n        setIsReplying(!isReplying);\r\n    }\r\n    const latchReplyBox = () =>\r\n    {\r\n        return (\r\n            <div className=\"flex content-center justify-center\" style={{position:\"relative\",left:`${props.offset}px`,width:`${width }px`}}>\r\n            <ReplyBox updateLoggedInUserAvatar={props.updateLoggedInUserAvatar} setFileIsUploading={props.setFileIsUploading} userID={props.userLoggedIn.UserID} expandComments={autoExpand} changeReplyState={changeReplyState}\r\n            getPosts={props.getPosts} isGuest={props.loggedInUserIsGuest} parentPostID={post.postID} isLoggedIn={props.isLoggedIn} userLoggedIn={props.userLoggedIn} offset={props.offset}\r\n            isNewPostVisible={!isNewPostVisible} isReplying={isReplying} fixedBox={false} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const replyCheck = () =>\r\n    {\r\n        if (isReplying && props.replyingPost != post.postID)\r\n        {\r\n            setIsReplying(!isReplying);\r\n        }\r\n       return isReplying && props.replyingPost == post.postID\r\n    }\r\n    async function deletePost(postID){\r\n\r\n        const response = await fetch(config.API() + `/tweetbookapi/Posts/${postID}`,{\r\n            method : \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(response =>{\r\n            if (!response.ok){\r\n                throw new Error(response.status);\r\n            }\r\n        }).then(data =>{\r\n            if (data < 1){//dont think this should be possible but IDK\r\n                throw new Error(\"Post was selected for deletion but was not deleted for some reason\")\r\n            }\r\n            else {\r\n                props.getPosts();\r\n            }\r\n        })\r\n    }\r\n    function commentsEval(){\r\n\r\n        if (props.nestLevel > 3 && hasComments){\r\n            return (\r\n                 <ShowMoreButton setPostsString={props.setPostsString} postID={post.postID} getPosts={props.getPosts}>lol</ShowMoreButton>\r\n            )\r\n        }\r\n       else if (hasComments){\r\n            return (\r\n            <CommentsButton\r\n            isCommentsExpanded={isExpanded}\r\n            commentsClicked={CommentsClicked} />)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"flex flex-col content-center justify-center w-full  \"\r\n            style={{\r\n                position:props.position,\r\n                left: style.left,\r\n                width: style.width,\r\n            }}\r\n            >\r\n            <div className={\"flex content-center justify-center \" +\r\n                    (props.isChild ? \"border-l-2 border-slate-300\" : \"\" )}\r\n                style={{\r\n                    zIndex: props.z,\r\n                    position: \"relative\",\r\n                    width: style.width,\r\n                    left: style.left\r\n                }}>\r\n                <div className=\"flex content-center text-gray-50 h-fit min-w-4 bg-slate-500 border-8\"\r\n                    style={{\r\n                        position:style.position,\r\n                        top:style.top,\r\n                        width:style.width\r\n                    }}>\r\n                    <Avatar updateLoggedInUserAvatar={props.updateLoggedInUserAvatar} setFileIsUploading={props.setFileIsUploading} userID={props.userLoggedIn.UserID} username={post.username} fileName={post.avatar}/>\r\n                    <div className=\"absolute h-8 w-8\"\r\n                        onMouseEnter= {()=> changeDeleteVis()}\r\n                    onMouseLeave= {()=> changeDeleteVis()}>\r\n                    {deleteButtonVis &&\r\n                    <button onClick={()=> deletePost(post.postID)}>\r\n                            <img  src=\"/res/delete_post.png\" alt=\"delete post\"\r\n                               />\r\n                        </button>\r\n                    }\r\n                    </div>\r\n                    <div className=\"box-border pb-10 relative bg-slate-500 w-full\">\r\n                        {props.returnButton.enabled &&\r\n                         props.returnButton.currentID == post.postID &&\r\n                        <ReturnButton returnButton={props.returnButton} setPostsString={props.setPostsString}/>}\r\n                        <div className=\"pl-3 font-sans bg-zinc-700 w-full\">\r\n                            <PostDate date={post.timePosted}/>\r\n                        </div>\r\n                        <p className=\"p-5 break-all font-sans\">\r\n                            {post.content}\r\n                        </p>\r\n                        <div className=\"flex space-x-4 absolute bottom-0 right-0\">\r\n                            <ReplyButton  changeReplyState={changeReplyState} />\r\n                            {commentsEval()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {replyCheck()\r\n                && latchReplyBox()\r\n\r\n            }\r\n\r\n            {isExpanded\r\n                && props.post.comments.map((post, idx) =>\r\n                {\r\n                    return (\r\n           //             getPosts={getPosts} replyingPost={postReplyId} isLoggedIn={isLoggedIn} userLoggedIn={userLoggedIn} loggedInUserIsGuest={isGuest} setIsNewPostVisible={setIsNewPostVisible}\r\n         // updateReplying={updateReplying} z={100} top={0} key={post.postID} post={post} offset={0}\r\n                        <Post returnButton={props.returnButton} setPostsString={props.setPostsString} nestLevel={props.nestLevel+1} isChild={true} deletePost={props.deletePost} updateLoggedInUserAvatar={props.updateLoggedInUserAvatar} setFileIsUploading={props.setFileIsUploading} userID={props.userLoggedIn.UserID} expandComments={autoExpand} getPosts={props.getPosts} isLoggedIn={props.isLoggedIn} userLoggedIn={props.userLoggedIn} loggedInUserIsGuest={props.loggedInUserIsGuest}\r\n                        replyingPost={props.replyingPost} setIsNewPostVisible={props.setIsNewPostVisible}\r\n                            updateReplying={props.updateReplying}\r\n                            z={props.z + 1} key={post.postID} post={post} offset={props.offset + 15} />\r\n\r\n\r\n                    )\r\n                })\r\n            }\r\n\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}