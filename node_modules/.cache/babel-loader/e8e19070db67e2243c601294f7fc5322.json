{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peppe\\\\Documents\\\\code-stuff\\\\TweetBook\\\\src\\\\components\\\\ReplyBox.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport Avatar from \"./Avatar\";\nimport PostButton from \"./PostButton\";\nimport CharacterCount from \"./CharacterCount\";\nimport config from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ReplyBox(props) {\n  _s();\n\n  const [getCurrReply, setCurrReply] = useState(\"\");\n  const [countAnimate, setCountAnimate] = useState(false);\n\n  const makePost = async () => {\n    let post = {\n      \"ParentPostID\": props.parentPostID,\n      \"UserID\": props.userID,\n      \"Username\": props.userLoggedIn.Username,\n      \"Content\": getCurrReply,\n      \"Avatar\": props.userLoggedIn.Avatar,\n      \"Comments\": [],\n      \"User\": props.userLoggedIn\n    };\n    const response = await fetch(config.API() + \"/tweetbookapi/Posts\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    });\n    setCurrReply(\"\");\n\n    if (props.isReplying) {\n      props.changeReplyState();\n    }\n\n    if (props.isReplying) {\n      props.expandComments();\n    }\n\n    props.getPosts();\n  };\n\n  const updateReply = e => {\n    setCurrReply(e.target.value);\n  };\n\n  const animationListener = () => {\n    if (getCurrReply.length >= 140) {\n      setCountAnimate(true);\n    }\n  };\n\n  const unregisterAnimation = () => {\n    if (getCurrReply.length >= 140) {\n      setCountAnimate(false);\n    }\n  };\n\n  function onKeyPressed(e) {\n    if (e.key == 'Enter') {\n      if (!e.shiftKey) {\n        e.preventDefault();\n        makePost();\n      }\n    }\n  }\n\n  const checkIfReplying = () => {\n    if (props.isNewPostVisible) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center fixed bottom-16 z-[1000] h-48 bg-sky-400 rounded-lg\",\n        style: {\n          width: \"600px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-8 pr-8\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            updateLoggedInUserAvatar: props.updateLoggedInUserAvatar,\n            setFileIsUploading: props.setFileIsUploading,\n            userID: props.userID,\n            isGuest: props.isGuest,\n            isLoggedIn: props.isLoggedIn,\n            blurAndShowLoading: props.blurAndShowLoading,\n            username: props.userLoggedIn.Username,\n            fileName: props.userLoggedIn.Avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-8 relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"p-1\",\n                style: {\n                  resize: \"none\"\n                },\n                value: getCurrReply,\n                onKeyPress: onKeyPressed,\n                maxLength: \"140\",\n                onKeyDown: unregisterAnimation,\n                onKeyUp: animationListener,\n                onInput: updateReply,\n                rows: \"4\",\n                cols: \"35\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(CharacterCount, {\n                countAnimate: countAnimate,\n                charCount: getCurrReply.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute bottom--1 right-1\",\n              children: /*#__PURE__*/_jsxDEV(PostButton, {\n                postClick: makePost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    } else if (props.fixedBox && !props.isNewPostVisible) {\n      return;\n    } else if (!props.fixedBox && props.isReplying) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex align-items justify-center relative\\r w-full z-[1000] h-48 bg-sky-400 rounded-lg\",\n        style: {},\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-8\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            updateLoggedInUserAvatar: props.updateLoggedInUserAvatar,\n            setFileIsUploading: props.setFileIsUploading,\n            isGuest: props.isGuest,\n            isLoggedIn: props.isLoggedIn,\n            username: props.userLoggedIn.Username,\n            fileName: props.userLoggedIn.Avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-8 relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"p-1\",\n                style: {\n                  resize: \"none\"\n                },\n                value: getCurrReply,\n                onKeyPress: onKeyPressed,\n                maxLength: \"140\",\n                onKeyDown: unregisterAnimation,\n                onKeyUp: animationListener,\n                onInput: updateReply,\n                rows: \"4\",\n                cols: \"35\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CharacterCount, {\n                countAnimate: countAnimate,\n                charCount: getCurrReply.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute bottom--1 right-8\",\n              children: /*#__PURE__*/_jsxDEV(PostButton, {\n                postClick: makePost\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 32\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 28\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return checkIfReplying();\n}\n\n_s(ReplyBox, \"gmrvjfrecTzrgWXlPfp87pmXqMQ=\");\n\n_c = ReplyBox;\nexport default ReplyBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReplyBox\");","map":{"version":3,"sources":["C:/Users/peppe/Documents/code-stuff/TweetBook/src/components/ReplyBox.js"],"names":["React","useState","Avatar","PostButton","CharacterCount","config","ReplyBox","props","getCurrReply","setCurrReply","countAnimate","setCountAnimate","makePost","post","parentPostID","userID","userLoggedIn","Username","response","fetch","API","method","headers","body","JSON","stringify","isReplying","changeReplyState","expandComments","getPosts","updateReply","e","target","value","animationListener","length","unregisterAnimation","onKeyPressed","key","shiftKey","preventDefault","checkIfReplying","isNewPostVisible","width","updateLoggedInUserAvatar","setFileIsUploading","isGuest","isLoggedIn","blurAndShowLoading","resize","fixedBox"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\r\nimport Avatar from \"./Avatar\";\r\nimport PostButton from \"./PostButton\"\r\nimport CharacterCount from \"./CharacterCount\"\r\nimport config from \"../config\"\r\nfunction ReplyBox(props)\r\n{\r\n    const [getCurrReply, setCurrReply] = useState(\"\");\r\n    const [countAnimate, setCountAnimate] = useState(false);\r\n    const makePost = async () => {\r\n        let post = {\r\n            \"ParentPostID\" : props.parentPostID,\r\n            \"UserID\" : props.userID,\r\n            \"Username\" : props.userLoggedIn.Username,\r\n            \"Content\" : getCurrReply,\r\n            \"Avatar\" : props.userLoggedIn.Avatar,\r\n            \"Comments\" : [],\r\n            \"User\": props.userLoggedIn\r\n        }\r\n        const response = await fetch(config.API() + \"/tweetbookapi/Posts\",{\r\n            method : \"POST\",\r\n            headers:{\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(post)\r\n        })\r\n        setCurrReply(\"\")\r\n        if (props.isReplying){\r\n            props.changeReplyState();\r\n        }\r\n        if (props.isReplying){\r\n            props.expandComments();\r\n        }\r\n        props.getPosts();\r\n    }\r\n    const updateReply = (e) =>{\r\n        setCurrReply(e.target.value);\r\n    }\r\n    const animationListener = () =>{\r\n        if (getCurrReply.length >= 140){\r\n            setCountAnimate(true);\r\n        }\r\n    }\r\n    const unregisterAnimation = ()=>{\r\n        if (getCurrReply.length >= 140){\r\n            setCountAnimate(false);\r\n        }\r\n\r\n    }\r\n    function onKeyPressed(e){\r\n        if (e.key == 'Enter'){\r\n            if (!e.shiftKey){\r\n                e.preventDefault();\r\n                makePost();\r\n            }\r\n        }\r\n\r\n    }\r\n    const checkIfReplying = () =>\r\n    {\r\n        if (props.isNewPostVisible)\r\n        {\r\n            return (\r\n                <div className=\"flex justify-center fixed bottom-16 z-[1000] h-48 bg-sky-400 rounded-lg\"\r\n                    style={{ width: \"600px\" }}>\r\n                    <div className=\"pt-8 pr-8\">\r\n                        <Avatar updateLoggedInUserAvatar={props.updateLoggedInUserAvatar} setFileIsUploading={props.setFileIsUploading} userID={props.userID} isGuest={props.isGuest} isLoggedIn={props.isLoggedIn} blurAndShowLoading={props.blurAndShowLoading} username={props.userLoggedIn.Username} fileName={props.userLoggedIn.Avatar}/>\r\n                    </div>\r\n                    <div>\r\n                       <div className=\"pt-8 relative\">\r\n                           <div>\r\n                               <textarea className=\"p-1\" style={{resize:\"none\"}} value={getCurrReply} onKeyPress={onKeyPressed}\r\n                                 maxLength=\"140\" onKeyDown={unregisterAnimation} onKeyUp={animationListener} onInput={updateReply} rows=\"4\" cols=\"35\">\r\n\r\n                                </textarea>\r\n                               <CharacterCount countAnimate={countAnimate} charCount={getCurrReply.length}/>\r\n                           </div>\r\n                           <div className=\"absolute bottom--1 right-1\" >\r\n                               <PostButton postClick={makePost}/>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (props.fixedBox && !props.isNewPostVisible)\r\n        {\r\n            return\r\n        }\r\n        else if (!props.fixedBox && props.isReplying)\r\n        {\r\n            return (\r\n                <div className=\"flex align-items justify-center relative\r\n                    w-full z-[1000] h-48 bg-sky-400 rounded-lg\"\r\n                    style={{}}>\r\n                    <div className=\"pt-8\">\r\n                        <Avatar updateLoggedInUserAvatar={props.updateLoggedInUserAvatar} setFileIsUploading={props.setFileIsUploading} isGuest={props.isGuest} isLoggedIn={props.isLoggedIn} username={props.userLoggedIn.Username} fileName={props.userLoggedIn.Avatar}/>\r\n                    </div>\r\n                    <div>\r\n                       <div className=\"p-8 relative\">\r\n                           <div>\r\n                                <textarea className=\"p-1\" style={{resize:\"none\"}} value={getCurrReply} onKeyPress={onKeyPressed}\r\n                                maxLength=\"140\" onKeyDown={unregisterAnimation} onKeyUp={animationListener} onInput={updateReply} rows=\"4\" cols=\"35\">\r\n                                </textarea>\r\n                               <CharacterCount countAnimate={countAnimate} charCount={getCurrReply.length}/>\r\n                           </div>\r\n                           <div className=\"absolute bottom--1 right-8\" >\r\n                               <PostButton postClick={makePost}/>\r\n                           </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        checkIfReplying()\r\n    )\r\n}\r\n\r\nexport default ReplyBox\r\n"]},"metadata":{},"sourceType":"module"}