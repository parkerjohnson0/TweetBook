{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\peppe\\\\Documents\\\\code-stuff\\\\TweetBook\\\\src\\\\components\\\\PostDate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDate(props) {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\n\n  let FormatDate = () => {\n    let date = new Date(props.date);\n    let now = new Date();\n    let timeElapsed = now.getTime() - date.getTime();\n    let minutesElapsed = timeElapsed / 100000;\n    let hoursElapsed = minutesElapsed / 60;\n    let hour = date.getHours() % 12;\n    let ampm = hour >= 12 ? 'am' : 'pm';\n    let minutes = date.getMinutes();\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    hour = hour ? hour : 12;\n\n    if (minutesElapsed < 1) {\n      return \"Just now\";\n    } else if (minutesElapsed < 2) {\n      return `${Math.floor(minutesElapsed)} minute ago`;\n    } else if (minutesElapsed < 60) {\n      return `${Math.floor(minutesElapsed)} minutes ago`;\n    } else if (hoursElapsed < 24) {\n      return `${Math.floor(hoursElapsed)} hours ago`;\n    }\n\n    return `${hour}:${minutes} ${ampm} - ${months[date.getMonth()]} ${date.getUTCDate()}, ${date.getFullYear()}`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: FormatDate()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PostDate;\nexport default PostDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDate\");","map":{"version":3,"sources":["C:/Users/peppe/Documents/code-stuff/TweetBook/src/components/PostDate.js"],"names":["React","PostDate","props","months","days","FormatDate","date","Date","now","timeElapsed","getTime","minutesElapsed","hoursElapsed","hour","getHours","ampm","minutes","getMinutes","Math","floor","getMonth","getUTCDate","getFullYear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EACA;AACI,MAAIC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,WAAjE,EAA8E,SAA9E,EAAyF,UAAzF,EAAqG,UAArG,CAAb;AACA,MAAIC,IAAI,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,OAA9B,EAAuC,KAAvC,EAA8C,KAA9C,CAAX;;AACA,MAAIC,UAAU,GAAG,MACjB;AACI,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASL,KAAK,CAACI,IAAf,CAAX;AACA,QAAIE,GAAG,GAAG,IAAID,IAAJ,EAAV;AACA,QAAIE,WAAW,GAAKD,GAAG,CAACE,OAAJ,KAAgBJ,IAAI,CAACI,OAAL,EAApC;AACA,QAAIC,cAAc,GAAGF,WAAW,GAAG,MAAnC;AACA,QAAIG,YAAY,GAAGD,cAAc,GAAG,EAApC;AAEA,QAAIE,IAAI,GAAGP,IAAI,CAACQ,QAAL,KAAkB,EAA7B;AACA,QAAIC,IAAI,GAAGF,IAAI,IAAI,EAAR,GAAa,IAAb,GAAoB,IAA/B;AACA,QAAIG,OAAO,GAAGV,IAAI,CAACW,UAAL,EAAd;AACAD,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACAH,IAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAH,GAAU,EAArB;;AAEA,QAAIF,cAAc,GAAG,CAArB,EAAuB;AACnB,aAAO,UAAP;AACH,KAFD,MAGK,IAAIA,cAAc,GAAG,CAArB,EAAuB;AACxB,aAAQ,GAAEO,IAAI,CAACC,KAAL,CAAWR,cAAX,CAA2B,aAArC;AACH,KAFI,MAGA,IAAIA,cAAc,GAAG,EAArB,EAAwB;AACzB,aAAQ,GAAEO,IAAI,CAACC,KAAL,CAAWR,cAAX,CAA2B,cAArC;AACH,KAFI,MAGA,IAAIC,YAAY,GAAG,EAAnB,EAAsB;AACvB,aAAQ,GAAEM,IAAI,CAACC,KAAL,CAAWP,YAAX,CAAyB,YAAnC;AACH;;AACD,WAAQ,GAAEC,IAAK,IAAGG,OAAQ,IAAGD,IAAK,MAAKZ,MAAM,CAACG,IAAI,CAACc,QAAL,EAAD,CAAkB,IAAGd,IAAI,CAACe,UAAL,EAAkB,KAAIf,IAAI,CAACgB,WAAL,EAAmB,EAA3G;AACH,GA3BD;;AA4BA,sBACI;AAAA,cACKjB,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KArCQJ,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\n\r\nfunction PostDate(props)\r\n{\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"September\", \"October\", \"November\", \"December\"]\r\n    let days = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"]\r\n    let FormatDate = () =>\r\n    {\r\n        let date = new Date(props.date);\r\n        let now = new Date();\r\n        let timeElapsed =  (now.getTime() - date.getTime());\r\n        let minutesElapsed = timeElapsed / 100000;\r\n        let hoursElapsed = minutesElapsed / 60;\r\n\r\n        let hour = date.getHours() % 12;\r\n        let ampm = hour >= 12 ? 'am' : 'pm'\r\n        let minutes = date.getMinutes()\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        hour = hour ? hour : 12;\r\n\r\n        if (minutesElapsed < 1){\r\n            return \"Just now\"\r\n        }\r\n        else if (minutesElapsed < 2){\r\n            return `${Math.floor(minutesElapsed)} minute ago`\r\n        }\r\n        else if (minutesElapsed < 60){\r\n            return `${Math.floor(minutesElapsed)} minutes ago`\r\n        }\r\n        else if (hoursElapsed < 24){\r\n            return `${Math.floor(hoursElapsed)} hours ago`\r\n        }\r\n        return `${hour}:${minutes} ${ampm} - ${months[date.getMonth()]} ${date.getUTCDate()}, ${date.getFullYear()}`\r\n    }\r\n    return (\r\n        <p>\r\n            {FormatDate()}\r\n        </p>\r\n    )\r\n}\r\nexport default PostDate;\r\n"]},"metadata":{},"sourceType":"module"}